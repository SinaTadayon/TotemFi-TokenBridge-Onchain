/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SignatureVerification } from "../SignatureVerification";

export class SignatureVerification__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureVerification> {
    return super.deploy(overrides || {}) as Promise<SignatureVerification>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignatureVerification {
    return super.attach(address) as SignatureVerification;
  }
  connect(signer: Signer): SignatureVerification__factory {
    return super.connect(signer) as SignatureVerification__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureVerification {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SignatureVerification;
  }
}

const _abi = [
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "swapType",
        type: "string",
      },
      {
        internalType: "string",
        name: "base",
        type: "string",
      },
      {
        internalType: "string",
        name: "quote",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
    ],
    name: "setDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "swapType",
        type: "string",
      },
      {
        internalType: "string",
        name: "base",
        type: "string",
      },
      {
        internalType: "string",
        name: "quote",
        type: "string",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061114a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634a41d1ac1461005c57806368729a3414610084578063c2fb26a614610099578063e21f37ce146100b1578063e73d7ef3146100ce575b600080fd5b61006f61006a366004610dd6565b6100e1565b60405190151581526020015b60405180910390f35b610097610092366004610e58565b610468565b005b6100a161056a565b60405161007b9493929190610f7e565b6100b96106a0565b60405161007b99989796959493929190610fc5565b6100976100dc36600461103f565b61087e565b600061046183600060405180610120016040529081600082018054610105906110bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610131906110bd565b801561017e5780601f106101535761010080835404028352916020019161017e565b820191906000526020600020905b81548152906001019060200180831161016157829003601f168201915b50505050508152602001600182018054610197906110bd565b80601f01602080910402602001604051908101604052809291908181526020018280546101c3906110bd565b80156102105780601f106101e557610100808354040283529160200191610210565b820191906000526020600020905b8154815290600101906020018083116101f357829003601f168201915b50505050508152602001600282018054610229906110bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610255906110bd565b80156102a25780601f10610277576101008083540402835291602001916102a2565b820191906000526020600020905b81548152906001019060200180831161028557829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815250506009604051806080016040529081600082018054610329906110bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610355906110bd565b80156103a25780601f10610377576101008083540402835291602001916103a2565b820191906000526020600020905b81548152906001019060200180831161038557829003601f168201915b505050505081526020016001820180546103bb906110bd565b80601f01602080910402602001604051908101604052809291908181526020018280546103e7906110bd565b80156104345780601f1061040957610100808354040283529160200191610434565b820191906000526020600020905b81548152906001019060200180831161041757829003601f168201915b5050509183525050600282015460208201526003909101546001600160a01b031660409091015285610910565b9392505050565b6040518061012001604052808481526020018381526020018281526020018981526020018881526020018781526020018681526020018581526020018a6001600160a01b03168152506000808201518160000190805190602001906104ce929190610c95565b5060208281015180516104e79260018501920190610c95565b5060408201518051610503916002840191602090910190610c95565b50606082015160038201556080820151600482015560a0820151600582015560c0820151600682015560e0820151600782015561010090910151600890910180546001600160a01b0319166001600160a01b03909216919091179055505050505050505050565b600980548190610579906110bd565b80601f01602080910402602001604051908101604052809291908181526020018280546105a5906110bd565b80156105f25780601f106105c7576101008083540402835291602001916105f2565b820191906000526020600020905b8154815290600101906020018083116105d557829003601f168201915b505050505090806001018054610607906110bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610633906110bd565b80156106805780601f1061065557610100808354040283529160200191610680565b820191906000526020600020905b81548152906001019060200180831161066357829003601f168201915b5050505060028301546003909301549192916001600160a01b0316905084565b6000805481906106af906110bd565b80601f01602080910402602001604051908101604052809291908181526020018280546106db906110bd565b80156107285780601f106106fd57610100808354040283529160200191610728565b820191906000526020600020905b81548152906001019060200180831161070b57829003601f168201915b50505050509080600101805461073d906110bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610769906110bd565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b5050505050908060020180546107cb906110bd565b80601f01602080910402602001604051908101604052809291908181526020018280546107f7906110bd565b80156108445780601f1061081957610100808354040283529160200191610844565b820191906000526020600020905b81548152906001019060200180831161082757829003601f168201915b505050600384015460048501546005860154600687015460078801546008909801549697939692955090935091906001600160a01b031689565b6040805160808101825285815260208082018690529181018490526001600160a01b0383166060820152855190916009916108be91839190890190610c95565b5060208281015180516108d79260018501920190610c95565b5060408201516002820155606090910151600390910180546001600160a01b0319166001600160a01b0390921691909117905550505050565b60008061091c8461099e565b9050600061092986610a79565b90506000610972838360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b9050876001600160a01b03166109888287610b9e565b6001600160a01b03161498975050505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82600001516040516020016109d691906110f8565b604051602081830303815290604052805190602001208360200151604051602001610a0191906110f8565b6040516020818303038152906040528051906020012084604001518560600151604051602001610a5c9594939291909485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b604051602081830303815290604052805190602001209050919050565b60007fa38a4acf6d805ae59b01b4ab44ebfd2aab922697d3120590e1920d98a01ee2838260000151604051602001610ab191906110f8565b604051602081830303815290604052805190602001208361010001518460200151604051602001610ae291906110f8565b604051602081830303815290604052805190602001208560400151604051602001610b0d91906110f8565b60405160208183030381529060405280519060200120866080015187606001518860a001518960e001518a60c00151604051602001610a5c9a99989796959493929190998a5260208a01989098526001600160a01b039690961660408901526060880194909452608087019290925260a086015260c085015260e08401526101008301526101208201526101400190565b600080600080610bad85610c1d565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610c08573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114610c775760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b828054610ca1906110bd565b90600052602060002090601f016020900481019282610cc35760008555610d09565b82601f10610cdc57805160ff1916838001178555610d09565b82800160010185558215610d09579182015b82811115610d09578251825591602001919060010190610cee565b50610d15929150610d19565b5090565b5b80821115610d155760008155600101610d1a565b80356001600160a01b0381168114610d4557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610d7b57610d7b610d4a565b604051601f8501601f19908116603f01168101908282118183101715610da357610da3610d4a565b81604052809350858152868686011115610dbc57600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215610de957600080fd5b610df283610d2e565b9150602083013567ffffffffffffffff811115610e0e57600080fd5b8301601f81018513610e1f57600080fd5b610e2e85823560208401610d60565b9150509250929050565b600082601f830112610e4957600080fd5b61046183833560208501610d60565b60008060008060008060008060006101208a8c031215610e7757600080fd5b610e808a610d2e565b985060208a0135975060408a0135965060608a0135955060808a0135945060a08a0135935060c08a013567ffffffffffffffff80821115610ec057600080fd5b610ecc8d838e01610e38565b945060e08c0135915080821115610ee257600080fd5b610eee8d838e01610e38565b93506101008c0135915080821115610f0557600080fd5b50610f128c828d01610e38565b9150509295985092959850929598565b60005b83811015610f3d578181015183820152602001610f25565b83811115610f4c576000848401525b50505050565b60008151808452610f6a816020860160208601610f22565b601f01601f19169290920160200192915050565b608081526000610f916080830187610f52565b8281036020840152610fa38187610f52565b604084019590955250506001600160a01b039190911660609091015292915050565b6000610120808352610fd98184018d610f52565b90508281036020840152610fed818c610f52565b90508281036040840152611001818b610f52565b60608401999099525050608081019590955260a085019390935260c084019190915260e08301526001600160a01b0316610100909101529392505050565b6000806000806080858703121561105557600080fd5b843567ffffffffffffffff8082111561106d57600080fd5b61107988838901610e38565b9550602087013591508082111561108f57600080fd5b5061109c87828801610e38565b935050604085013591506110b260608601610d2e565b905092959194509250565b600181811c908216806110d157607f821691505b602082108114156110f257634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161110a818460208701610f22565b919091019291505056fea264697066735822122024144beadb8b5c3e57aeab79567b989bafe0ce1abde42e7253fccbd291410deb64736f6c634300080b0033";
