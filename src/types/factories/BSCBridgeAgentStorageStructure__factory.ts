/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { BSCBridgeAgentStorageStructure } from "../BSCBridgeAgentStorageStructure";

export class BSCBridgeAgentStorageStructure__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BSCBridgeAgentStorageStructure> {
    return super.deploy(
      overrides || {}
    ) as Promise<BSCBridgeAgentStorageStructure>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BSCBridgeAgentStorageStructure {
    return super.attach(address) as BSCBridgeAgentStorageStructure;
  }
  connect(signer: Signer): BSCBridgeAgentStorageStructure__factory {
    return super.connect(signer) as BSCBridgeAgentStorageStructure__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BSCBridgeAgentStorageStructure {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BSCBridgeAgentStorageStructure;
  }
}

const _abi = [
  {
    inputs: [],
    name: "bscBridgeAgentImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pancakePair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pancakeswapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "slippagePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "swapDataMap",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchange",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "swapType",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totemToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wbnb",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061035e806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a7d6dc1b11610066578063a7d6dc1b1461012d578063b8c9d25c1461014f578063d4fde9c914610162578063db6754ed14610175578063e8153c931461018857600080fd5b80633e47158c146100a35780634452d81c146100d35780638cf0e21e146100ea5780638d72647e146101075780638da5cb5b1461011a575b600080fd5b6034546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100dc603a5481565b6040519081526020016100ca565b603b546100f79060ff1681565b60405190151581526020016100ca565b6036546100b6906001600160a01b031681565b6035546100b6906001600160a01b031681565b61014061013b366004610251565b61019b565b6040516100ca93929190610289565b6039546100b6906001600160a01b031681565b6033546100b6906001600160a01b031681565b6038546100b6906001600160a01b031681565b6037546100b6906001600160a01b031681565b603c602090815260009283526040808420909152908252902080546001820154600283018054929391926101ce906102ed565b80601f01602080910402602001604051908101604052809291908181526020018280546101fa906102ed565b80156102475780601f1061021c57610100808354040283529160200191610247565b820191906000526020600020905b81548152906001019060200180831161022a57829003601f168201915b5050505050905083565b6000806040838503121561026457600080fd5b82356001600160a01b038116811461027b57600080fd5b946020939093013593505050565b83815260006020848184015260606040840152835180606085015260005b818110156102c3578581018301518582016080015282016102a7565b818111156102d5576000608083870101525b50601f01601f19169290920160800195945050505050565b600181811c9082168061030157607f821691505b6020821081141561032257634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212205d620e054e0c553e22cf617b147df370a5f149177f0c4f5460781f301fe80f6264736f6c634300080b0033";
