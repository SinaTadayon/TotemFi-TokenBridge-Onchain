/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { BSCBridgeAgentProxy } from "../BSCBridgeAgentProxy";

export class BSCBridgeAgentProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _proxyAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BSCBridgeAgentProxy> {
    return super.deploy(
      _proxyAdmin,
      overrides || {}
    ) as Promise<BSCBridgeAgentProxy>;
  }
  getDeployTransaction(
    _proxyAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_proxyAdmin, overrides || {});
  }
  attach(address: string): BSCBridgeAgentProxy {
    return super.attach(address) as BSCBridgeAgentProxy;
  }
  connect(signer: Signer): BSCBridgeAgentProxy__factory {
    return super.connect(signer) as BSCBridgeAgentProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BSCBridgeAgentProxy {
    return new Contract(address, _abi, signerOrProvider) as BSCBridgeAgentProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyAdmin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldImpl",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newImpl",
        type: "address",
      },
    ],
    name: "ImplementationUpgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "bscBridgeAgentImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disableUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pancakeswapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pancakePair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wbnb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_totemToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_slippagePercentage",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pancakePair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pancakeswapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "slippagePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "swapDataMap",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchange",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "swapType",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totemToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBSCBridgeAgentImpl",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wbnb",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a51380380610a5183398101604081905261002f9161006b565b603b805460ff19166001179055603480546001600160a01b03929092166001600160a01b0319928316179055603580549091163317905561009b565b60006020828403121561007d57600080fd5b81516001600160a01b038116811461009457600080fd5b9392505050565b6109a7806100aa6000396000f3fe6080604052600436106100e15760003560e01c80638da5cb5b1161007f578063d4fde9c911610059578063d4fde9c914610288578063db6754ed146102a8578063e8153c93146102c8578063f7013ef6146102e8576100e8565b80638da5cb5b14610219578063a7d6dc1b14610239578063b8c9d25c14610268576100e8565b80634452d81c116100bb5780634452d81c1461019657806367fc9138146101ba5780638cf0e21e146101cf5780638d72647e146101f9576100e8565b806328016f9a146101225780633659cfe6146101395780633e47158c14610159576100e8565b366100e857005b6033546001600160a01b0316806100fe57600080fd5b3660008037600080366000845af43d6000803e80801561011d573d6000f35b3d6000fd5b34801561012e57600080fd5b50610137610308565b005b34801561014557600080fd5b50610137610154366004610797565b610353565b34801561016557600080fd5b50603454610179906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a257600080fd5b506101ac603a5481565b60405190815260200161018d565b3480156101c657600080fd5b5061013761044c565b3480156101db57600080fd5b50603b546101e99060ff1681565b604051901515815260200161018d565b34801561020557600080fd5b50603654610179906001600160a01b031681565b34801561022557600080fd5b50603554610179906001600160a01b031681565b34801561024557600080fd5b506102596102543660046107b9565b61048b565b60405161018d939291906107e3565b34801561027457600080fd5b50603954610179906001600160a01b031681565b34801561029457600080fd5b50603354610179906001600160a01b031681565b3480156102b457600080fd5b50603854610179906001600160a01b031681565b3480156102d457600080fd5b50603754610179906001600160a01b031681565b3480156102f457600080fd5b50610137610303366004610847565b610541565b6034546001600160a01b0316336001600160a01b0316146103445760405162461bcd60e51b815260040161033b906108a3565b60405180910390fd5b603b805460ff19166001179055565b6035546001600160a01b0316336001600160a01b0316146103865760405162461bcd60e51b815260040161033b906108a3565b603b5460ff166103d85760405162461bcd60e51b815260206004820152601a60248201527f55706772616465206973206e6f7420656e61626c656420796574000000000000604482015260640161033b565b6033546001600160a01b03828116911614156104365760405162461bcd60e51b815260206004820152601d60248201527f497320616c72656164792074686520696d706c656d656e746174696f6e000000604482015260640161033b565b61043f8161063c565b50603b805460ff19169055565b6034546001600160a01b0316336001600160a01b03161461047f5760405162461bcd60e51b815260040161033b906108a3565b603b805460ff19169055565b603c602090815260009283526040808420909152908252902080546001820154600283018054929391926104be906108e8565b80601f01602080910402602001604051908101604052809291908181526020018280546104ea906108e8565b80156105375780601f1061050c57610100808354040283529160200191610537565b820191906000526020600020905b81548152906001019060200180831161051a57829003601f168201915b5050505050905083565b600054610100900460ff168061055a575060005460ff16155b6105765760405162461bcd60e51b815260040161033b90610923565b600054610100900460ff16158015610598576000805461ffff19166101011790555b6035546001600160a01b0316336001600160a01b0316146105cb5760405162461bcd60e51b815260040161033b906108a3565b6105d361069d565b603880546001600160a01b038089166001600160a01b03199283161790925560398054888416908316179055603680548784169083161790556037805492861692909116919091179055603a8290558015610634576000805461ff00191690555b505050505050565b603380546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f1a5ca99a64512489fd9455e8da426740174107a69292fca0a8b80b08f6f67892910160405180910390a15050565b600054610100900460ff16806106b6575060005460ff16155b6106d25760405162461bcd60e51b815260040161033b90610923565b600054610100900460ff161580156106f4576000805461ffff19166101011790555b6106fc610711565b801561070e576000805461ff00191690555b50565b600054610100900460ff168061072a575060005460ff16155b6107465760405162461bcd60e51b815260040161033b90610923565b600054610100900460ff161580156106fc576000805461ffff1916610101179055801561070e576000805461ff001916905550565b80356001600160a01b038116811461079257600080fd5b919050565b6000602082840312156107a957600080fd5b6107b28261077b565b9392505050565b600080604083850312156107cc57600080fd5b6107d58361077b565b946020939093013593505050565b83815260006020848184015260606040840152835180606085015260005b8181101561081d57858101830151858201608001528201610801565b8181111561082f576000608083870101525b50601f01601f19169290920160800195945050505050565b600080600080600060a0868803121561085f57600080fd5b6108688661077b565b94506108766020870161077b565b93506108846040870161077b565b92506108926060870161077b565b949793965091946080013592915050565b60208082526025908201527f63616e206f6e6c792062652063616c6c6564206279207468652070726f78792060408201526430b236b4b760d91b606082015260800190565b600181811c908216806108fc57607f821691505b6020821081141561091d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea26469706673582212206555c59d495632115ce49464a694055193067891806c99fcd51eb0df1d71ad3464736f6c634300080b0033";
